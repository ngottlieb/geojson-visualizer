{"version":3,"sources":["app/components/App.js","app/components/DataForm.js","app/components/Filters.js","app/components/Info.js","app/components/MainMap.js","app/initialize.js"],"names":["App","props","state","geoJSON","dataUrlChangeKey","showModal","dataUrl","updateDataUrl","bind","openModal","loadExampleData","triggerGeoJSONUpdate","params","queryString","parse","location","search","setState","newUrl","self","fetch","then","response","json","j","React","Component","DataForm","activeTabKey","shareMapUrl","getShareMapUrl","copied","handleChange","loadData","setShortUrl","e","target","name","value","prevProps","filters","colourByProperty","setShareMapUrl","urlBase","origin","pathname","stringify","JSON","url","console","log","text","txt","shortUrl","key","updateColourByProperty","propList","updateFilters","copyToClipboard","Filters","newFilters","Object","assign","propsFilters","map","Info","geometryTypeCounts","getGeometryTypeCounts","features","feature","geometry","type","propsList","handlePropClick","geometryTypeCountsList","keys","fileName","length","MainMap","latlng","zoom","tileLayer","mapRef","createRef","featureStyle","showFeature","bounds","leafletBounds","current","leafletElement","fitBounds","layer","properties","bindPopup","popupText","propKeys","p","styles","color","fillColor","propColour","colour","stringToColour","property","filter","includes","position","dataChangeKey","onEachFeature","getPropList","str","hash","i","charCodeAt","toString","substr","document","addEventListener","ReactDOM","render","getElementById","ReactGA","initialize","pageview","window"],"mappings":"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","file":"public/app.js","sourcesContent":["import React from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport MainMap from \"./MainMap\";\nimport DataForm from \"./DataForm\";\nimport queryString from 'query-string';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      geoJSON: \"\",\n      dataUrlChangeKey: 0,\n      showModal: false,\n      dataUrl: \"\",\n    };\n\n    this.updateDataUrl = this.updateDataUrl.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.loadExampleData = this.loadExampleData.bind(this);\n    this.triggerGeoJSONUpdate = this.triggerGeoJSONUpdate.bind(this);\n\n    const params = queryString.parse(location.search);\n    if (params.dataUrl) {\n      this.updateDataUrl(params.dataUrl);\n    }\n  }\n\n  triggerGeoJSONUpdate() {\n    this.setState({ dataUrlChangeKey: this.state.dataUrlChangeKey + 1 });\n  }\n\n  updateDataUrl(newUrl) {\n    const self = this;\n    fetch(newUrl)\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(j) {\n        self.setState({\n          geoJSON: j,\n          dataUrl: newUrl,\n          dataUrlChangeKey: self.state.dataUrlChangeKey + 1,\n        });\n      });\n  }\n\n  openModal() {\n    this.setState({showModal: true});\n  }\n\n  loadExampleData() {\n    this.setState({\n      dataUrl:\n        \"https://raw.githubusercontent.com/loganpowell/census-geojson/master/GeoJSON/500k/2017/american-indian-area!alaska-native-area!hawaiian-home-land.json\",\n      showModal: false\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <MainMap\n          geoJSON={this.state.geoJSON}\n          dataChangeKey={this.state.dataUrlChangeKey}\n          updateDataUrl={this.updateDataUrl}\n          dataUrl={this.state.dataUrl}\n          openModal={this.openModal}\n          triggerGeoJSONUpdate={this.triggerGeoJSONUpdate}\n        />\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.setState({showModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>What is this?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              This is a GeoJSON visualization tool designed to allow users to\n              quickly and easily view geospatial data. It's an alternative to\n              opening up a GIS client like Arc or QGIS. It analyzes the GeoJSON\n              data and makes some guesses about the type of data in properties\n              and uses those to enable filtering data.\n            </p>\n            <h4>How do I use it?</h4>\n            <p>\n              Right now, you have to provide a URL to a GeoJSON file and click\n              \"Load Data.\"\n            </p>\n            <h4>Enough talk, let's see an example</h4>\n            <p>\n              The example data are from <a href=\"https://github.com/loganpowell/census-geojson\">https://github.com/loganpowell/census-geojson</a>.\n            </p>\n            <Button onClick={this.loadExampleData} bsStyle=\"info\">\n              Load Example GeoJSON\n            </Button>\n            <h4>Bugs, Feature Requests, Contributions?</h4>\n            <p>\n              Head to the Github repo: <a href=\"https://github.com/ngottlieb/geojson-visualizer\">https://github.com/ngottlieb/geojson-visualizer</a>.\n              Feel free to fork and submit pull requests, or use Github issues to submit bugs or feature requests.\n            </p>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {MapControl} from \"react-leaflet\";\nimport {\n  Well,\n  Form,\n  FormGroup,\n  FormControl,\n  Checkbox,\n  ControlLabel,\n  Button,\n  Tabs,\n  Tab,\n} from \"react-bootstrap\";\nimport Info from \"./Info\";\nimport Filters from \"./Filters\";\nimport queryString from \"query-string\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\n\nexport default class DataForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataUrl: this.props.dataUrl,\n      activeTabKey: this.props.geoJSON ? 2 : 1,\n      shareMapUrl: this.getShareMapUrl(),\n      copied: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loadData = this.loadData.bind(this);\n    this.setShortUrl = this.setShortUrl.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.dataUrl !== prevProps.dataUrl) {\n      this.setState({dataUrl: this.props.dataUrl}, () => {\n        this.loadData();\n      });\n    }\n\n    if (\n      this.props.dataUrl !== prevProps.dataUrl ||\n      this.props.filters !== prevProps.filters ||\n      this.props.colourByProperty !== prevProps.colourByProperty\n    ) {\n      this.setShareMapUrl();\n    }\n  }\n\n  getShareMapUrl() {\n    const urlBase = location.origin + location.pathname + \"?\";\n    return (\n      urlBase +\n      queryString.stringify({\n        colourByProperty: this.props.colourByProperty,\n        filters: JSON.stringify(this.props.filters),\n        dataUrl: this.props.dataUrl,\n      })\n    );\n  }\n\n  setShareMapUrl() {\n    const url = this.getShareMapUrl();\n\n    this.setShortUrl(url);\n    this.setState({shareMapUrl: url});\n  }\n\n  setShortUrl(url) {\n    const self = this;\n    console.log(\"running get short url\");\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/http://tinyurl.com/api-create.php?url=\" +\n        url,\n    )\n      .then(function(response) {\n        return response.text();\n      })\n      .then(function(txt) {\n        self.setState({shortUrl: txt, copied: false});\n      });\n  }\n\n  loadData() {\n    this.props.updateDataUrl(this.state.dataUrl);\n    this.setState({activeTabKey: 2});\n  }\n\n  render() {\n    return (\n      <Well className=\"form-box leaflet-top leaflet-control leaflet-right\">\n        <Tabs\n          activeKey={this.state.activeTabKey}\n          id=\"data-form-tabs\"\n          onSelect={key => {\n            this.setState({activeTabKey: key});\n          }}>\n          <Tab eventKey={1} title=\"Load Data\">\n            <Form>\n              <FormGroup controlId=\"dataUrl\">\n                <ControlLabel>Data URL</ControlLabel>\n                <FormControl\n                  type=\"text\"\n                  value={this.state.dataUrl}\n                  name=\"dataUrl\"\n                  placeholder=\"Input GeoJSON URL\"\n                  onChange={this.handleChange}\n                />\n              </FormGroup>\n              <Button bsStyle=\"info\" onClick={this.loadData}>\n                Load Data\n              </Button>\n              <Button\n                className=\"pull-left\"\n                onClick={this.props.openModal}\n                bsStyle=\"danger\">\n                HELP!\n              </Button>\n            </Form>\n          </Tab>\n          <Tab eventKey={2} title=\"Info\" className=\"info-tab\">\n            <Info\n              className=\"info-tab\"\n              geoJSON={this.props.geoJSON}\n              colourByProperty={this.props.colourByProperty}\n              updateColourByProperty={this.props.updateColourByProperty}\n              propList={this.props.propList}\n            />\n          </Tab>\n          <Tab eventKey={3} title=\"Filter\">\n            <Filters\n              className=\"filters-tab\"\n              geoJSON={this.props.geoJSON}\n              propList={this.props.propList}\n              filters={this.props.filters}\n              updateFilters={this.props.updateFilters}\n            />\n          </Tab>\n          <Tab eventKey={4} title=\"Share Map\">\n            <p>\n              Share this link to regenerate this map:\n              <br />\n              <a href={this.state.shareMapUrl}> {this.state.shareMapUrl}</a>\n            </p>\n            <hr />\n            <FormGroup controlId=\"shortUrl\">\n              <ControlLabel>Shortened URL</ControlLabel>\n              <FormControl\n                type=\"text\"\n                defaultValue={this.state.shortUrl}\n                readOnly\n              />\n            </FormGroup>\n            <CopyToClipboard\n              text={this.state.shortUrl}\n              onCopy={() => this.setState({copied: true})}>\n              <Button\n                onClick={this.copyToClipboard}\n                bsStyle={this.state.copied ? \"danger\" : \"info\"}>\n                {this.state.copied ? \"Copied\" : \"Copy to Clipboard\"}\n              </Button>\n            </CopyToClipboard>\n          </Tab>\n        </Tabs>\n      </Well>\n    );\n  }\n}\n","import React from \"react\";\nimport {Form, FormGroup, FormControl, ControlLabel} from \"react-bootstrap\";\n\nexport default class Filters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    var newFilters = Object.assign({}, this.props.filters);\n    newFilters[e.target.name] = e.target.value;\n    this.props.updateFilters(newFilters);\n  }\n\n  render() {\n    const propsFilters = this.props.propList.map(name => (\n      <FormGroup controlId={name} key={name}>\n        <ControlLabel>{name}</ControlLabel>\n        <FormControl\n          type=\"text\"\n          name={name}\n          defaultValue={this.props.filters[name]}\n          placeholder={`Filter by ${name}`}\n          onChange={this.handleChange}\n        />\n      </FormGroup>\n    ));\n    return (\n      <React.Fragment>\n        <h2>Filter By Properties</h2>\n        {propsFilters}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport {Alert, ListGroup, ListGroupItem, Label, Badge} from \"react-bootstrap\";\n\nexport default class Info extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      geometryTypeCounts: this.getGeometryTypeCounts(this.props.geoJSON),\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.geoJSON !== prevProps.geoJSON) {\n      this.setState({\n        geometryTypeCounts: this.getGeometryTypeCounts(this.props.geoJSON),\n      });\n    }\n  }\n\n  getGeometryTypeCounts(geoJSON) {\n    const geometryTypeCounts = {};\n    if (geoJSON) {\n      for (var feature of geoJSON.features) {\n        geometryTypeCounts[feature.geometry.type] =\n          ++geometryTypeCounts[feature.geometry.type] || 0;\n      }\n    }\n    return geometryTypeCounts;\n  }\n\n  handlePropClick(name) {\n    // turn prop colouring off if this prop is already active\n    if (this.props.colourByProperty === name) {\n      this.props.updateColourByProperty(null);\n    } else {\n      this.props.updateColourByProperty(name);\n    }\n  }\n\n  render() {\n    const propsList = this.props.propList.map(name => (\n      <ListGroupItem\n        className={this.props.colourByProperty === name ? 'active' : ''}\n        key={name}\n        onClick={() => this.handlePropClick(name)}\n      >\n        {name}\n      </ListGroupItem>\n    ));\n    const geometryTypeCountsList = Object.keys(\n      this.state.geometryTypeCounts,\n    ).map(type => (\n      <ListGroupItem key={type}>\n        {type} <Label>{this.state.geometryTypeCounts[type]}</Label>\n      </ListGroupItem>\n    ));\n    return (\n      <React.Fragment>\n        <h2>\n          Filename\n          <Label>{this.props.geoJSON ? this.props.geoJSON.fileName : \"\"}</Label>\n        </h2>\n        <h2>\n          Features\n          <Label>\n            {this.props.geoJSON ? this.props.geoJSON.features.length : 0}\n          </Label>\n        </h2>\n        <ListGroup>{geometryTypeCountsList}</ListGroup>\n        <hr />\n        <h2>\n          Properties<Label>{this.props.propList.length}</Label>\n        </h2>\n        <Alert bsStyle=\"info\">\n          Click on a property name to colour features by that property.\n        </Alert>\n        <ListGroup>{propsList}</ListGroup>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport {GeoJSON, Map, TileLayer, Pane, Popup} from \"react-leaflet\";\nimport DataForm from \"./DataForm\";\nimport bbox from \"@turf/bbox\";\nimport queryString from 'query-string';\n\nexport default class MainMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const params = queryString.parse(location.search);\n    const filters = params.filters ? JSON.parse(params.filters) : {};\n\n    this.state = {\n      latlng: [51, -0.09],\n      zoom: 1,\n      tileLayer: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      colourByProperty: params.colourByProperty,\n      filters: filters\n    };\n\n    this.mapRef = React.createRef();\n    this.featureStyle = this.featureStyle.bind(this);\n    this.updateColourByProperty = this.updateColourByProperty.bind(this);\n    this.showFeature = this.showFeature.bind(this);\n    this.updateFilters = this.updateFilters.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    // use turf to calculate bounding box of GeoJSON\n    // and fit map to bounds\n    // because we re-render the map whenever the GeoJSON changes, we can't\n    // use an \"onAdd\" callback on the GeoJSON component because the map\n    // hasn't been rendered to the DOM when we're adding the GeoJSON\n    if (this.props.geoJSON && this.props.geoJSON !== prevProps.geoJSON) {\n      const bounds = bbox(this.props.geoJSON);\n      const leafletBounds = [[bounds[1], bounds[0]], [bounds[3], bounds[2]]];\n      this.mapRef.current.leafletElement.fitBounds(leafletBounds);\n    }\n  }\n\n  onEachFeature(feature, layer) {\n    if (feature.properties) {\n      layer.bindPopup(this.popupText(feature.properties));\n    }\n  }\n\n  updateFilters(newFilters) {\n    this.setState({ filters: newFilters });\n    this.props.triggerGeoJSONUpdate();\n  }\n\n  getPropList(geoJSON) {\n    const filters = {};\n    if (geoJSON) {\n      for (var feature of geoJSON.features) {\n        const propKeys = Object.keys(feature.properties);\n        for (var p of propKeys) {\n          filters[p] = \"\";\n        }\n      }\n    }\n    return Object.keys(filters);\n  }\n\n  featureStyle(feature) {\n    var styles = {\n      color: \"rgb(51, 136, 255)\",\n      fillColor: \"rgb(51, 136, 255)\",\n    };\n    // check if colourByProperty is set\n    if (this.state.colourByProperty) {\n      const propColour = this.state.colourByProperty;\n      if (feature.properties[propColour]) {\n        const colour = stringToColour(feature.properties[propColour]);\n        styles.fillColor = colour;\n        styles.color = colour;\n      }\n    }\n    return styles;\n  }\n\n  popupText(properties) {\n    var popupText = \"<dl>\";\n    for (const key of Object.keys(properties)) {\n      popupText += \"<dt>\" + key + \"</dt>\";\n      popupText += \"<dd>\" + properties[key] + \"</dd>\";\n    }\n    popupText += \"</dl>\";\n    return popupText;\n  }\n\n  updateColourByProperty(property) {\n    this.setState({\n      colourByProperty: property,\n    });\n  }\n\n  showFeature(feature, layer) {\n    for (const filter of Object.keys(this.state.filters)) {\n      if (!('' + feature.properties[filter]).includes(this.state.filters[filter])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  render() {\n    const position = this.state.latlng;\n    const zoom = this.state.zoom;\n    const tileLayer = this.state.tileLayer;\n\n    var geoJSON;\n    if (this.props.geoJSON) {\n      geoJSON = (\n        <GeoJSON\n          key={this.props.dataChangeKey}\n          data={this.props.geoJSON}\n          onEachFeature={this.onEachFeature.bind(this)}\n          style={this.featureStyle}\n          filter={this.showFeature}\n        />\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Map center={position} zoom={zoom} id=\"mapid\" ref={this.mapRef}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n            maxZoom={19}\n          />\n          {geoJSON}\n        </Map>\n        <DataForm\n          openModal={this.props.openModal}\n          updateDataUrl={this.props.updateDataUrl}\n          dataUrl={this.props.dataUrl}\n          geoJSON={this.props.geoJSON}\n          dataChangeKey={this.props.dataChangeKey}\n          updateColourByProperty={this.updateColourByProperty}\n          colourByProperty={this.state.colourByProperty}\n          filters={this.state.filters}\n          propList={this.getPropList(this.props.geoJSON)}\n          updateFilters={this.updateFilters}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\n// https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript\nvar stringToColour = function(str) {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  var colour = \"#\";\n  for (var i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 0xff;\n    colour += (\"00\" + value.toString(16)).substr(-2);\n  }\n  return colour;\n};\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from 'components/App';\nimport ReactGA from 'react-ga';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.getElementById('container'));\n  ReactGA.initialize('UA-128189503-3');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n});\n"]}